<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.demo.rbac.mapper.SysUserMapper">

    <!--
    假设一个用户只有一个角色（使用resultMap配置一对一映射）
    注意：resultMap中列为避免重复起的别名，需要与SQL中别名一样，否则结果映射为空
    -->
    <select id="selectUserAndRoleById2" resultMap="userRoleMap2">
        select
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.create_time,
            u.user_info,
            u.head_img,
            r.id r_id,
            r.role_name,
            r.enabled,
            r.create_by,
            r.create_time
            r_create_time
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{id}
    </select>

    <resultMap id="userMap" type="com.mybatis.demo.rbac.model.SysUser">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="user_password" property="userPassword"/>
        <result column="user_email" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_info" property="userInfo"/>
        <result column="head_img" jdbcType="BLOB" property="headImg"/>
    </resultMap>

    <resultMap id="userRoleMap" type="com.mybatis.demo.rbac.model.SysUser">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="user_password" property="userPassword"/>
        <result column="user_email" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_info" property="userInfo"/>
        <result column="head_img" jdbcType="BLOB" property="headImg"/>

        <!-- role相关属性，为了避免不同表有相同的列，所有可能重名的都加上前缀r_ -->
        <result column="r_id" property="role.id"/>
        <result column="role_name" property="role.roleName"/>
        <result column="enabled" property="role.enabled"/>
        <result column="create_by" property="role.createBy"/>
        <result column="r_create_time" jdbcType="TIMESTAMP" property="role.createTime"/>
    </resultMap>

    <resultMap id="userRoleMap2" extends="userMap" type="com.mybatis.demo.rbac.model.SysUser">
        <result column="r_id" property="role.id"/>
        <result column="role_name" property="role.roleName"/>
        <result column="enabled" property="role.enabled"/>
        <result column="create_by" property="role.createBy"/>
        <result column="r_create_time" jdbcType="TIMESTAMP" property="role.createTime"/>
    </resultMap>

    <select id="selectUserAndRoleById3" resultMap="userRoleMap4">
        select
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.create_time,
            u.user_info,
            u.head_img,
            r.id r_id,
            r.role_name r_role_name,
            r.enabled r_enabled,
            r.create_by r_create_by,
            r.create_time r_create_time
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{id}
    </select>

    <resultMap id="userRoleMap3" extends="userMap" type="com.mybatis.demo.rbac.model.SysUser">
        <!-- role相关属性，前缀都加上了r_ -->
        <association property="role" columnPrefix="r_" javaType="com.mybatis.demo.rbac.model.SysRole">
            <result column="id" property="id"/>
            <result column="role_name" property="roleName"/>
            <result column="enabled" property="enabled"/>
            <result column="create_by" property="createBy"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        </association>
    </resultMap>

    <!-- 使用resultMap的association标签配置一对一映射（最简版） -->
    <resultMap id="userRoleMap4" extends="userMap" type="com.mybatis.demo.rbac.model.SysUser">

        <!-- role相关属性，直接通过resultMap属性引用roleMap，需要加上命名空间的前缀，列前缀都加上了r_ -->
        <association property="role" columnPrefix="r_" resultMap="com.mybatis.demo.rbac.mapper.SysRoleMapper.roleMap"/>
    </resultMap>

    <!-- 使用resultMap的association标签进行嵌套查询 -->
    <select id="selectUserAndRoleByIdSel" resultMap="userRoleMapSelect">
        select
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.create_time,
            u.user_info,
            u.head_img,
            ur.role_id
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        where u.id = #{id}
    </select>

    <!-- 使用resultMap的association标签进行嵌套查询 -->
    <resultMap id="userRoleMapSelect" extends="userMap" type="com.mybatis.demo.rbac.model.SysUser">

        <!-- 嵌套查询role，column配置的是嵌套查询SQL的参数，当有多个时用逗号隔开, fetchType="lazy"实现延迟加载 -->
        <association property="role" fetchType="lazy" column="{id=role_id}"
                     select="com.mybatis.demo.rbac.mapper.SysRoleMapper.selectByPrimaryKey"/>
    </resultMap>

    <!-- 使用resultMap的<collection>标签进行一对多查询 -->
    <resultMap id="userRolesMap" extends="userMap" type="com.mybatis.demo.rbac.model.SysUser">

        <!-- 角色的集合 -->
        <collection property="roles" columnPrefix="r_" resultMap="com.mybatis.demo.rbac.mapper.SysRoleMapper.roleMap"/>
    </resultMap>

    <!-- 使用resultMap的<collection>标签进行一对多查询 -->
    <select id="selectRolesById" resultMap="userRolesMap">
        select
        u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.create_time,
        u.user_info,
        u.head_img,
        r.id r_id,
        r.role_name r_role_name,
        r.enabled r_enabled,
        r.create_by r_create_by,
        r.create_time r_create_time
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        <where>
            <if test="id != null">
                u.id = #{id}
            </if>
        </where>
    </select>

    <!-- 使用resultMap的<collection>标签进行一对多查询 ，根据编号查用户信息-->
    <resultMap id="userRolesMapSel" extends="userMap" type="com.mybatis.demo.rbac.model.SysUser">

        <!-- 角色的集合 -->
        <collection property="roles" fetchType="lazy" column="{userId=id}"
                    select="com.mybatis.demo.rbac.mapper.SysRoleMapper.selectRolesById"/>
    </resultMap>

    <!-- 使用resultMap的<collection>标签进行一对多查询，根据编号查用户信息 -->
    <select id="selectUserById" resultMap="userRolesMapSel">
        select
            id,
            user_name,
            user_password,
            user_email,
            create_time,
            user_info,
            head_img
        from sys_user
        where id = #{id}
    </select>


</mapper>