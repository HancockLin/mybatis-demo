<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.demo.rbac.mapper.SysRoleMapper">
    <resultMap id="roleMap" type="com.mybatis.demo.rbac.model.SysRole">
        <id column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="enabled" property="enabled"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <select id="selectByPrimaryKey" resultMap="roleMap">
        select *
        from sys_role
        where id = #{id}
    </select>

    <!-- 使用resultMap的<collection>标签进行一对多查询，根据用户查询角色信息 -->
    <resultMap id="rolePrisMapSel" extends="roleMap" type="com.mybatis.demo.rbac.model.SysRole">

        <!-- 角色权限的集合 -->
        <collection property="sysPrivileges" fetchType="lazy" column="{roleId=id}"
                    select="com.mybatis.demo.rbac.mapper.SysPrivilegeMapper.selectPriByRoleId" />
    </resultMap>

    <!-- 使用resultMap的<collection>标签进行一对多查询，查询角色对应的权限 -->
    <select id="selectRolesById" resultMap="rolePrisMapSel">
        select
            r.id,
            r.role_name,
            r.enabled,
            r.create_by,
            r.create_time
        from sys_role r
                 inner join sys_user_role ur on ur.role_id = r.id
        where ur.user_id = #{userId}
    </select>

    <!-- 使用resultMap的<discrimiator>标签进行选择查询，相当于java的switch -->
    <resultMap id="rolePrisMapChoose" type="com.mybatis.demo.rbac.model.SysRole">

        <!-- discrimiator鉴别器 -->
        <!--
        <discriminator column="enabled" javaType="int">
            <case value="1" resultMap="rolePrisMapSel" />
            <case value="0" resultMap="roleMap" />
        </discriminator>
        -->

        <discriminator column="enabled" javaType="int">
            <case value="1" resultMap="rolePrisMapSel" />
            <case value="0" resultType="com.mybatis.demo.rbac.model.SysRole">
                <id column="id" property="id" />
                <result column="role_name" property="roleName" />
            </case>
        </discriminator>
    </resultMap>

    <!-- 使用resultMap的鉴别器<discrimiator>标签查询 -->
    <select id="selectRolesByIdChoose" resultMap="rolePrisMapChoose">
        select
            r.id,
            r.role_name,
            r.enabled,
            r.create_by,
            r.create_time
        from sys_role r
                 inner join sys_user_role ur on ur.role_id = r.id
        where ur.user_id = #{userId}
    </select>

    <!-- 枚举的用法 -->
    <select id="selectById" resultMap="roleMap">
        select
            id, role_name, enabled, create_by, create_time
        from
            sys_role
        where
            id = #{id}
    </select>

    <!-- 枚举的用法 -->
    <update id="updateById">
        update sys_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>

            <!-- 加上这个是为了防止所有字段都为空或部分不空时，SQL语句不会报错，set标签也解决不了全空值的问题 -->
            id = #{id}
        </trim>
        where id = #{id}
    </update>

</mapper>